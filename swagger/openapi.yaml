openapi: 3.0.0
info:
  title: Régiség Webshop API
  description: API a régiségek webshopjához, amely támogatja a termékek, rendelések és felhasználók kezelését.
  version: 1.0.0
servers:
  - url: http://backend.vm1.test
    description: VM1 backend
paths:
  /api/products:
    get:
      summary: Termékek listázása
      description: Lekérdezi az összes terméket. Szűrés és rendezés is elérhető query paraméterek segítségével.
      operationId: products.index
      tags:
        - Termékek
      parameters:
        - name: category
          in: query
          description: Szűrés kategória alapján
          schema:
            type: string
        - name: sort_by
          in: query
          description: Rendezés mező alapján (például `name` vagy `price`)
          schema:
            type: string
        - name: order
          in: query
          description: Rendezési sorrend (`asc` vagy `desc`)
          schema:
            type: string
            enum: [asc, desc]
      responses:
        '200':
          description: A termékek listája
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
    post:
      summary: Új termék létrehozása
      description: Új termék hozzáadása az adatbázishoz (admin jogosultság szükséges).
      operationId: products.store
      tags:
        - Termékek
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Termék sikeresen létrehozva
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '422':
          description: Érvényességi hiba
  /api/products/{id}:
    get:
      summary: Egy termék adatainak lekérdezése
      description: Egy termék részletes adatainak lekérdezése az azonosítója alapján.
      operationId: products.show
      tags:
        - Termékek
      parameters:
        - name: id
          in: path
          required: true
          description: A lekérdezni kívánt termék azonosítója
          schema:
            type: integer
      responses:
        '200':
          description: A termék adatai
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: A termék nem található
    put:
      summary: Termék adatainak frissítése
      description: Egy meglévő termék adatainak frissítése (admin jogosultság szükséges).
      operationId: products.update
      tags:
        - Termékek
      parameters:
        - name: id
          in: path
          required: true
          description: A frissíteni kívánt termék azonosítója
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Termék sikeresen frissítve
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: A termék nem található
        '422':
          description: Érvényességi hiba
    delete:
      summary: Termék törlése
      description: Egy termék törlése az adatbázisból (admin jogosultság szükséges).
      operationId: products.destroy
      tags:
        - Termékek
      parameters:
        - name: id
          in: path
          required: true
          description: A törölni kívánt termék azonosítója
          schema:
            type: integer
      responses:
        '204':
          description: Termék sikeresen törölve
        '404':
          description: A termék nem található
  /api/register:
    post:
      summary: Regisztráció
      description: Új felhasználó regisztrálása.
      operationId: register
      tags:
        - Felhasználók
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Felhasználó sikeresen regisztrálva
        '422':
          description: Érvényességi hiba
  /api/login:
    post:
      summary: Bejelentkezés
      description: Felhasználó bejelentkezése.
      operationId: login
      tags:
        - Felhasználók
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginInput'
      responses:
        '200':
          description: Sikeres bejelentkezés
        '401':
          description: Hibás bejelentkezési adatok
  /api/logout:
    post:
      summary: Kijelentkezés
      description: Bejelentkezett felhasználó kijelentkezése (autentikáció szükséges).
      operationId: logout
      tags:
        - Felhasználók
      responses:
        '204':
          description: Sikeres kijelentkezés
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Régi Váza
        material:
          type: string
          example: Porcelán
        description:
          type: string
          example: Gyönyörű, kézzel festett váza a 19. századból.
        price:
          type: number
          format: float
          example: 150.00
        image_url:
          type: string
          example: https://example.com/vaza.jpg
        stock:
          type: integer
          example: 10
        category:
          type: string
          example: Kerámia
        created_at:
          type: string
          format: date-time
          example: "2024-12-23T08:52:29.000Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-12-23T08:52:29.000Z"
    ProductInput:
      type: object
      properties:
        name:
          type: string
          example: Régi Váza
        material:
          type: string
          example: Porcelán
        description:
          type: string
          example: Gyönyörű, kézzel festett váza a 19. századból.
        price:
          type: number
          format: float
          example: 150.00
        image_url:
          type: string
          example: https://example.com/vaza.jpg
        stock:
          type: integer
          example: 10
        category:
          type: string
          example: Kerámia
      required:
        - name
        - material
        - price
    UserInput:
      type: object
      properties:
        name:
          type: string
          example: Teszt Elek
        email:
          type: string
          format: email
          example: test@test.hu
        password:
          type: string
          example: jelszo
    UserLoginInput:
      type: object
      properties:
        email:
          type: string
          format: email
          example: test@test.hu
        password:
          type: string
          example: jelszo